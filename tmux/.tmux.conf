
#    _                                                                    __
#   | |                                                                  / _|
#   | |                                                                 / /
#   | |                                                                 | |
#  _| |_   ___________   _    _  __   __      ____   ______   ______   _| |_
# |_   _| |  __   __  | | |  | | \ \ / /     |  __| |  __  | |  __  | |_   _|
#   | |   | |  | |  | | | |  | |  \ V /      | |    | |  | | | |  | |   | |
#   | |   | |  | |  | | | |__| |  / Λ \   _  | |__  | |__| | | |  | |   | |
#   |_|   |_|  |_|  |_| |______| /_/ \_\ |_| |____| |______| |_|  |_|   |_|
#  _________________________________________________________________________
# |_________________________________________________________________________|

# source ~/.config/tmux/ayu.tmux

# don't start a login shell
# set -g default-command "${SHELL}"

set -g mouse on          # mouse mode on
unbind -n MouseDown3Pane # disable right click menu
set -sg escape-time 10   # time to wait after <esc>
set -g mode-keys vi      # set to vim keybinds


set -g default-terminal "${TERM}"
# explicitly enable terminfo
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q' # ???
set -ga terminal-overrides '*256col*:Tc'              # 256 colors
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'    # undercurl support
set -as terminal-overrides ',vte*:Smulx=\E[4\:%p1%dm'
set -as terminal-overrides '*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0
#nvim change curson shape depending on mode-keys
#xterm-termite:Tc *:Ss=\E[%p1%d q:Se=\E[ q

# prefix
set -g prefix C-s

# style

# Status bar colors.
set -g status-position top
# Status message color
set-window-option -g status-style fg=brightyellow,bg=default,none

# Pane divider colors.
set-option -g pane-border-style fg=brightblack,bg=default
set-option -g pane-active-border-style fg=brightblack,bg=default

# Command-line messages colors.
set-option -g message-style fg=red,bg=black

# Set left and right sections.
set-option -g status-left-length 20
set-option -g status-left "#[fg=red,bg=default,dim] PID=#{pane_pid} "
set-option -g status-right "#[fg=brightblack,bg=default] flags={#{window_flags}} "

# Set alignment of windows list.
set-option -g status-justify centre

# Window list.
set-window-option -g window-status-style fg=white,bg=default
set-window-option -g window-status-format "  #I:#W  "

# Current window in list.
set-window-option -g window-status-current-style fg=black,bg=default
set-window-option -g window-status-current-format "#[fg=cyan,bg=default]█#[fg=default,bg=cyan]#I:#W#[fg=cyan,bg=default]█"

set-window-option -g window-status-activity-style fg=magenta,bg=default,none

# Identify activity in non-current windows.
set-window-option -g monitor-activity on
set-option -g visual-activity off

bind r display-message "Hold shift :^)" #source-file ~/.tmux.conf \;

# Vi copypaste
set -g mode-keys vi
bind C-s copy-mode
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind -T copy-mode-vi v send-keys -X begin-selection

# window management
bind w new-window
bind d confirm-before -p "Kill window #P? (y/n)" kill-window

# rotate
bind o rotate-window

set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.config/tmux/plugins'

if "test ! -d ~/.config/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm && ~/.config/tmux/plugins/tpm/bin/install_plugins'"

set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-sensible'

run '~/.config/tmux/plugins/tpm/tpm'

is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# Alt + H J K L
bind-key 'h' if-shell "$is_vim" 'send-keys M-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key 'j' if-shell "$is_vim" 'send-keys M-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key 'k' if-shell "$is_vim" 'send-keys M-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key 'l' if-shell "$is_vim" 'send-keys M-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'C-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'C-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'C-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'C-l' if -F '#{pane_at_right}' '' 'select-pane -R'

# Ctrl + S (prefix) ++ H J K L
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h' { if -F '#{pane_at_left}' '' 'select-pane -L' }
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l' { if -F '#{pane_at_right}' '' 'select-pane -R' }

bind-key -T copy-mode-vi 'M-h' if -F '#{pane_at_left}' '' 'select-pane -L'
bind-key -T copy-mode-vi 'M-j' if -F '#{pane_at_bottom}' '' 'select-pane -D'
bind-key -T copy-mode-vi 'M-k' if -F '#{pane_at_top}' '' 'select-pane -U'
bind-key -T copy-mode-vi 'M-l' if -F '#{pane_at_right}' '' 'select-pane -R'
