#!/usr/bin/zsh
#  NOTE: stolen from https://vincent.bernat.ch/en/blog/2021-zsh-transient-prompt

eval "$(starship init zsh)"

_vbe_prompt () {
    local retval=$?

    # When compact
    if (( $_vbe_prompt_compact )); then
        starship module character
        return
    fi

    # Regular `starship` prompt with many information
    starship prompt --terminal-width="$COLUMNS" --keymap="${KEYMAP:-}" --status="$STARSHIP_CMD_STATUS" --pipestatus="${STARSHIP_PIPE_STATUS[*]}" --cmd-duration="${STARSHIP_DURATION:-}" --jobs="$STARSHIP_JOBS_COUNT"
    return retval
}
setopt prompt_subst

PS1='$(_vbe_prompt)'

_vbe-zle-line-init() {
    [[ $CONTEXT == start ]] || return 0

    # Start regular line editor
    (( $+zle_bracketed_paste )) && print -r -n - $zle_bracketed_paste[1]
    zle .recursive-edit
    local -i ret=$?
    (( $+zle_bracketed_paste )) && print -r -n - $zle_bracketed_paste[2]

    # If we received EOT, we exit the shell
    if [[ $ret == 0 && $KEYS == $'\4' ]]; then
        _vbe_prompt_compact=1
        zle .reset-prompt
        exit
    fi

    # Line edition is over. Shorten the current prompt.
    _vbe_prompt_compact=1
    zle .reset-prompt
    unset _vbe_prompt_compact



    if (( ret )); then
        # Ctrl-C
        zle .send-break
    else
        # Enter
        zle .accept-line
    fi


    return ret
}
zle -N zle-line-init _vbe-zle-line-init
